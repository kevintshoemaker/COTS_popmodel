{
    "contents" : "\n####################################\n###  Utility functions for the COTS population model\n#################################### \n\n\n###################\n# loadPackages: GENERIC FUNCTION FOR INSTALLING/LOADING PACKAGES FROM CRAN\n########################################\n##########\n# OBJECTIVE:\n#    loads a package from CRAN into the global environment.  \n# PARAMS:\n#    - none\n# RETURNS:\n#    - nothing. results in libraries being loaded into the global environment \n###################\n\nloadPackage <- function(pkg){\n\n  if(pkg %in% rownames(installed.packages()) == FALSE) {suppressMessages(suppressWarnings(install.packages(pkg)))}\n  eval(parse(text=sprintf(\"suppressMessages(suppressWarnings(require(%s)))\",pkg)), envir= .GlobalEnv)\n\n}\n\n###################\n# loadPackages\n##########\n# OBJECTIVE:\n#    loads all necessary packages into the global environment. Makes use of the \n#    \"loadPackage\" utility function.  \n# PARAMS:\n#    - none\n# RETURNS:\n#    - nothing. results in libraries being loaded into the global environment \n###################\n\nloadPackages <- function(){\n  loadPackage(\"lhs\")            # for latin hypercube sampling\n  loadPackage(\"RCurl\")          # for loading source code from github\n  loadPackage(\"raster\")         # for managing raster data\n  loadPackage(\"rgdal\")          # for reading and writing all sorts of spatial data   \n  loadPackage(\"popbio\")         # for doing basic matrix population modeling\n  loadPackage(\"tidyverse\")      # data manipulation\n  loadPackage(\"rgeos\")          # geometry applications\n  loadPackage(\"plyr\")           # data wrangling\n  loadPackage(\"dplyr\")          # data wrangling\n  loadPackage(\"reshape2\")       # data wrangling\n  loadPackage(\"gstat\")          # performing interpolation\n  }\n\n\n###################\n# source_github\n##########\n# OBJECTIVE:\n#    Read source code from a GIThub repository \n# PARAMS:\n#    - baseurl: URL for the repository\n#    - scriptname: name of the script/library to load\n# RETURNS:\n#    - nothing. loads functions from GitHub \n###################\n\nsource_github <- function(baseurl,scriptname) {\n  # load package\n  loadPackage(RCurl)\n \n  # read script lines from website\n  url <- sprintf(\"%s%s\",baseurl,scriptname)\n  script <- getURL(url, ssl.verifypeer = FALSE)\n  \n  script <- gsub(\"\\r\\n\", \"\\n\", script)     # get rid of carriage returns (not sure why this is necessary...)\n \n  # parse lines and evaluate in the global environement\n  eval(parse(text = script), envir= .GlobalEnv)\n}\n\n\n###################\n# saveWorkspace\n##########\n# OBJECTIVE:\n#    save the current workspace or a set of R objects on the workspace \n# PARAMS:\n#    - objNames: (optional) list of names of objects to save.\n# RETURNS:\n#    - nothing. saves an RData file to the R_Workspaces directory in Dropbox \n###################\n\nsaveWorkspace <- function(objNames=NULL,filename=\"R_workspace\"){\n  if(is.null(objNames)) objNames = ls(all = TRUE,name=.GlobalEnv)\n  setwd(RDATA_DIRECTORY)\n  filename <- sprintf(\"%s_%s.RData\",filename,Sys.Date())\n  save(list = objNames, file = filename)\n}\n \n\n\n\n\n",
    "created" : 1474998166850.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3329150465",
    "id" : "17D21E3A",
    "lastKnownWriteTime" : 1475118296,
    "path" : "~/GitHub/COTS_popmodel/COTSModel_Utilityfunctions.R",
    "project_path" : "COTSModel_Utilityfunctions.R",
    "properties" : {
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "type" : "r_source"
}