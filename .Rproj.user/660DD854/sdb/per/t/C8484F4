{
    "contents" : "---\ntitle: \"CoTS_ Juvenile Growth Rate\"\nauthor: \"Samuel Matthews\"\ndate: \"23 August 2016\"\noutput: html_document\n---\n\n### *_Data Exploration_*\n\n* Take a look at how the data is structured\n\n\n```{r,message=F, warning=FALSE}\nlibrary(dplyr)\nlibrary(plyr)\nlibrary(nlstools)\nlibrary(nlme)\nlibrary(ggplot2)\nlibrary(sp)\nlibrary(gstat)\n\nrm(list = ls())\n```\n\n```{r}\n#load data\nRAW <- read.table(\"JUVSize_Regrouped.txt\",sep=\"\\t\",header=TRUE)\ncentral <- subset(RAW, select = c(\"Date\", \"ReefComplex\", \"SiteName\", \"Size\", \"Feeding_Su\", \"MonthNo\", \"Latitude\", \"Longitude\"))\nnames(central)[7:8] <- c(\"LAT\", \"LONG\")\ncentral$MonthNo <- factor(central$MonthNo)\n\nArlington <- subset(central, ReefComplex==\"ArlingtonComplex\")\nSudbury <- subset(central, ReefComplex==\"SudburyComplex\")\nTongue <- subset(central, ReefComplex==\"TongueComplex\")\nUndine <- subset(central, ReefComplex==\"UndineComplex\")\n\n#create an exponential function and an exponential function with fixed intercept\nem <-function(x,p,k,q) {(p*exp(k*x)) + q}\nem.fixed <-function(x,p,k,f) {(p*exp(k*x)) + (f-p)}\n```\n\n```{r}\nRAW$MonthNo <- factor(RAW$MonthNo)\n\n(boxplot <- ggplot(RAW, aes(y=Size, x=factor(MonthNo, levels=1:12))) +\n        geom_boxplot(outlier.colour=\"black\", outlier.shape=8, outlier.size=4) +\n        ggtitle(\"CoTS Juvenile Growth Rate\") +\n        theme_classic() +\n        scale_x_discrete(\"Month\", breaks=factor(1:12), drop=FALSE))\n\n(boxplot <- ggplot(central, aes(y=Size, x=MonthNo, fill=Feeding_Su, color=Feeding_Su)) +\n        geom_boxplot(outlier.colour=\"black\", outlier.shape=8, outlier.size=4) +\n        ggtitle(\"CoTS Juvenile Growth Rate\") +\n        theme_classic())\n(boxplot.Arl <- ggplot(Arlington, aes(y=Size, x=MonthNo, fill=Feeding_Su, color=Feeding_Su)) +\n        geom_boxplot(outlier.colour=\"black\", outlier.shape=8, outlier.size=4) +\n        ggtitle(\"CoTS Juvenile Growth Rate - Arlington\") +\n        theme_classic())\n(boxplot.Ton <- ggplot(Tongue, aes(y=Size, x=MonthNo, fill=Feeding_Su, color=Feeding_Su)) +\n        geom_boxplot(outlier.colour=\"black\", outlier.shape=8, outlier.size=4) +\n         ggtitle(\"CoTS Juvenile Growth Rate - Tongue\") +\n        theme_classic())\n(boxplot.Und <- ggplot(Undine, aes(y=Size, x=MonthNo, fill=Feeding_Su, color=Feeding_Su)) +\n        geom_boxplot(outlier.colour=\"black\", outlier.shape=8, outlier.size=4) +\n         ggtitle(\"CoTS Juvenile Growth Rate - Undine\") +\n        theme_classic())\n(boxplot.reef <- ggplot(central, aes(y=Size, x=MonthNo, fill=ReefComplex, color=ReefComplex)) +\n        geom_boxplot(outlier.colour=\"black\", outlier.shape=8, outlier.size=4) +\n        ggtitle(\"CoTS Juvenile Growth Rate\") +\n        theme_classic())\n(scatter <- ggplot(central, aes(y=Size, x=Date, fill=ReefComplex, color=ReefComplex)) +\n        geom_point() +\n        ggtitle(\"CoTS Juvenile Growth Rate\") +\n        theme_classic())\n```\n\n### *_Explore Spatial Autocorrelation and Heteroscedasticity_*\n\n* These diagnostics help us to address whether there are patterns related to LAT/LONG that need to be incorporated into the model\n\n\n```{r}\n#look at saptial autocorrelation by fitting a simple linear model and looking for patterns in the residuals\ndata.spatialCor.lm <- lm(Size~Date, central)\npar(mfrow=c(2,2))\nplot(data.spatialCor.lm, which=1:4)\n\n#create a bubble plot to see if there is spatial pattern in residuals \ncentral$Resid <- rstandard(data.spatialCor.lm)\nlibrary(sp)\ncentral.sp <- central\ncoordinates(central.sp) <- ~LAT+LONG #effectively convert the data into a spatial data frame\nbubble(central.sp,'Resid')\n\nvar.mod<-variogram(Resid~1,data=central.sp,alpha=c(0,45,90,135))\nplot(var.mod)\n```\n\n* these plots show us that there is no problem with spatial autocorrelation, but looking at the Residuals vs Fitted from the linear model we can see that there is a wedge shape in the residuals meaning that we weill need to incorporate a variance structure in our models as variance increaeses with size.\n\n\n### *_Determine Initial Parameters using `nls`_*\n\n* we will use `nls` to get starting parameter values for the exponential equation. From these values we will compare a range of parameters using `nlme` so we include random factors and different variance structures\n\n```{r, message=F}\n#define wts for nls\nwts <- 1/sqrt(central$Date)\n\n#define models\n\nm1 <- as.formula(Size ~ p * exp(k * Date) + q) #standard \nm2 <- as.formula(Size ~ p * exp(k * Date) + (0.5-p)) #fixed intercept of 0.5\nm3 <- as.formula(Size ~ p * exp(k * Date) + (0.3-p))\nm4 <- as.formula(Size ~ p * exp(k * Date) + (0.7-p))\n\n\n\nnls1 <- nls(m1,start=list(p=6.9,k=0.004, q=-8.5), data = RAW, weights = Date^3)\nnls2 <- nls(m2,start=list(p=5,k=0.002), data = RAW, weights = Date^3)\nnls3 <- nls(m3,start=list(p=5,k=0.002), data = RAW, weights = Date^3)\nnls4 <- nls(m4,start=list(p=5,k=0.002), data = RAW, weights = Date^3)\n\n\n#Retrieve best fit model parameters\nBestFitPars <- function(nls.object){\n      confints <- confint(nls.object)\n      bestpars <- nls.object$m$getPars()\n      upperpars <- confints[,2] \n      lowerpars <- confints[,1]\n      pars <- data.frame(bestpars,upperpars,lowerpars)\n      return(pars)\n}\n```\n\n```{r}\n(BFP1 <- BestFitPars(nls1))#####BEST FIT PARAMETERS FOR THE FULL MODEL######\n\nBFP2 <- BestFitPars(nls2)#####BEST FIT PARAMETERS FOR THE FIXED INTERCEPT MODEL at 0.5######\n# add the pseudo-q value by setting 0.5-p = q \npseudo.qs <- 0.5 - BFP2[1,]\n(BFP2 <- rbind(BFP2, pseudo.qs=pseudo.qs))\n\nBFP3 <- BestFitPars(nls3)#####BEST FIT PARAMETERS FOR THE FIXED INTERCEPT MODEL at 0.3######\n# add the pseudo-q value by setting 0.5-p = q \npseudo.qs3 <- 0.5 - BFP3[1,]\n(BFP3 <- rbind(BFP3, pseudo.qs=pseudo.qs3))\n\nBFP4 <- BestFitPars(nls4)#####BEST FIT PARAMETERS FOR THE FIXED INTERCEPT MODEL at 0.7######\n# add the pseudo-q value by setting 0.5-p = q \npseudo.qs4 <- 0.5 - BFP4[1,]\n(BFP4 <- rbind(BFP4, pseudo.qs=pseudo.qs4))\n\n```\n\n### *_Preliminary Plots_*\n\n* Plot the results of the best fit and fixed intercept models\n\n```{r, message=FALSE}\nnlsCIplot <- function(nls.object, Data) {\n\n(confints <- confint(nls.object))\n(bestpars <- nls.object$m$getPars())\nupperpars <- confints[,2] \nlowerpars <- confints[,1]\n(pars <- data.frame(bestpars,upperpars,lowerpars))\n\nfit.data <- data.frame(x=seq(0,max(Data$Date, na.rm=TRUE),len=length(Data$Date)), \n                       best=NA, upper=NA, lower=NA, Okaji =NA, Lucas=NA)\nfit.data$best <- em(fit.data$x, bestpars[1], bestpars[2], bestpars[3])\n\nfit.data$upper <- em(fit.data$x, upperpars[1], upperpars[2], upperpars[3])\nfit.data$lower <- em(fit.data$x, lowerpars[1], lowerpars[2], lowerpars[3])\nggplot(fit.data, aes(y=best, x=x)) +\n       geom_line() + theme_classic() +\n       geom_ribbon(aes(ymin=lower, ymax=upper), fill='blue', alpha=0.2) +\n       geom_point(data=Data, aes(x=Date,y=Size, color=ReefComplex)) +\n       xlab(\"Estimated Age (Days)\") +\n       ylab(\"Size(mm)\") +\n       ggtitle(\"CoTS Juvenile Growth Rate\") +\n       scale_color_discrete(name=\"Reef Complex\")\n\n}\n\nnlsCIplot.fixed <- function(nls.object, Data) {\n##Define parameters for best fit and confidence intervals\nconfints <- confint(nls.object)\nbestpars <- nls.object$m$getPars()\nupperpars <- confints[,2] \nlowerpars <- confints[,1]\npars <- data.frame(bestpars,upperpars,lowerpars)\n\nfit.data <- data.frame(x=seq(0,max(Data$Date, na.rm=TRUE),len=length(Data$Date)), \n                       best=NA, upper=NA, lower=NA, Okaji=NA, Lucas=NA)\nfit.data$best <- em.fixed(fit.data$x, bestpars[1], bestpars[2], 0.5)\n\nfit.data$Okaji <- em(fit.data$x, 1.543, 0.226/30.5, -1.043)\nfit.data$upper <- em.fixed(fit.data$x, upperpars[1] +0.5, upperpars[2]+0.0005, 2)\nfit.data$lower <- em.fixed(fit.data$x, lowerpars[1]-0.5, lowerpars[2]-0.0005, -1)\n\nggplot(fit.data, aes(y=best, x=x)) +\n       geom_line() + theme_classic() +\n       geom_ribbon(aes(ymin=lower, ymax=upper), fill='blue', alpha=0.2) +\n       geom_point(data=Data, aes(x=Date,y=Size, color=ReefComplex)) +\n       geom_line(aes(y=Okaji, x=x), linetype=4) +\n       xlab(\"Estimated Age (Days)\") +\n       ylab(\"Size(mm)\") +\n       ggtitle(\"CoTS Juvenile Growth Rate - Fixed Intercept\") +\n       scale_color_discrete(name=\"Reef Complex\")\n\n}\n```\n\n```{r}\nnlsCIplot(nls1, central) ### Full Model ###\nnlsCIplot.fixed(nls2, central) ### Fixed Intercept ###\n```\n\n### **_Fit models using `lme` to incorporate random effects and variance structures_**\n\n* As I've been having an enormous difficulty getting `nlme` to work properly I will cycle through plausible parameters to make sure we have the best possible model after accounting for variance structures and random effects\n\n```{r}\n### Test differnt types of model build with our intitial estimates\nlme1 <-lme(Size~{(1.7471*exp(0.00351*Date)) -3.058},random=~1|ReefComplex/SiteName, \n           data=central, method='REML') #Site as a random factor within ReefComplex\nlme2 <-lme(Size~{(1.7471*exp(0.00351*Date)) -3.058},random=~1|ReefComplex/SiteName, \n           data=central, method='REML', weights = varFixed(~Date)) #variance structure is added(variance increases proportial to x)\nlme3 <-lme(Size~{(1.7471*exp(0.00351*Date)) -3.058},random=~1|ReefComplex/SiteName, \n           data=central, method='REML', weights = varFixed(~Date^2)) #variance structure is added(variance increases proportial to x^2)\nAIC(lme1, lme2, lme3)\nBIC(lme1, lme2, lme3)\n\n# model performs considerably better when variance structure is added \n\nplot(residuals(lme1, type = \"normalized\")~fitted(lme1))\n#Distinct wedge shape is evident\nplot(residuals(lme2, type = \"normalized\")~fitted(lme2))\n# wedge is reduced\nplot(residuals(lme3, type = \"normalized\")~fitted(lme3))\n#wedge is practically gone\n```\n\n* We will therefore proceed with Site nested in reef complex as a random factor and with variance proportial to Date^2\n\n### **_Comparing with fixed intercept models: AIC, BIC, RSS_**\n\n```{r}\nBFP1;BFP2\n#redefine lme1 as our best model so far and compare it with fixed intercept\nlme1 <-lme(Size~{(2.076*exp(0.0073*Date)) -2.36},random=~1|ReefComplex/SiteName, \n           data=central, method='REML', weights = varFixed(~Date^2))\nlme2 <-lme(Size~{(10.359*exp(0.0037*Date)) -9.86},random=~1|ReefComplex/SiteName, \n           data=central, method='REML', weights = varFixed(~Date^2))\nlme3 <-lme(Size~{(9*exp(0.004*Date)) -8.5},random=~1|ReefComplex/SiteName, \n           data=central, method='REML', weights = varFixed(~Date^2))\n\nAIC(lme1, lme2,lme3)\nsummary(lme3)\n\nlme1 <-lme(Size~{(1.421984022*exp(0.008156382*Date)) + 3.808638443},random=~1|ReefComplex/SiteName, \n           data=RAW, method='REML', weights = varFixed(~Date^2))\nlme2 <-lme(Size~{(1.283002813*exp(0.008412547*Date)) + 4.179677832},random=~1|ReefComplex/SiteName, \n           data=RAW, method='REML', weights = varFixed(~Date^3))###AIC=17894, best fit\nlme3 <-lme(Size~{(1.122215107*exp(0.008744732*Date)) + 4.655443763},random=~1|ReefComplex/SiteName, \n           data=RAW, method='REML', weights = varFixed(~Date^4))\nlme4 <-lme(Size~{(7.973276115*exp(0.004239443*Date)) + (0.5-7.973276115)},random=~1|ReefComplex/SiteName, \n           data=RAW, method='REML', weights = varFixed(~Date^2))\nlme5 <-lme(Size~{(7.097890774*exp(0.004517286*Date)) + (0.5-7.097890774)},random=~1|ReefComplex/SiteName, \n           data=RAW, method='REML', weights = varFixed(~Date^3))###AIC=18079\nlme6 <-lme(Size~{(6.367653300*exp(0.004780055*Date)) + (0.5-6.367653300)},random=~1|ReefComplex/SiteName, \n           data=RAW, method='REML', weights = varFixed(~Date^4))\n\n\nmodlist = list(lme(Size~{(1.421984022*exp(0.008156382*Date)) + 3.808638443},random=~1|ReefComplex/SiteName, \n           data=RAW, method='REML', weights = varFixed(~Date^2)),\n          lme(Size~{(1.283002813*exp(0.008412547*Date)) + 4.179677832},random=~1|ReefComplex/SiteName, \n           data=RAW, method='REML', weights = varFixed(~Date^3)),\n          lme(Size~{(1.122215107*exp(0.008744732*Date)) + 4.655443763},random=~1|ReefComplex/SiteName, \n           data=RAW, method='REML'),\n          lme(Size~{(7.973276115*exp(0.004239443*Date)) + (0.5-7.973276115)},random=~1|ReefComplex/SiteName, \n           data=RAW, method='REML', weights = varFixed(~Date^2)),\n          lme(Size~{(7.097890774*exp(0.004517286*Date)) + (0.5-7.097890774)},random=~1|ReefComplex/SiteName, \n           data=RAW, method='REML', weights = varFixed(~Date^3)),\n          lme(Size~{(6.367653300*exp(0.004780055*Date)) + (0.5-6.367653300)},random=~1|ReefComplex/SiteName, \n           data=RAW, method='REML'))\nAIC(lme1,lme2,lme3,lme4,lme5,lme6)\nsummary(lme2)\nsummary(lme4)\nlme4$coefficients$fixed\nlme2$coefficients$fixed\n\n```\n\n* The fixed model performs worse but not by much\n####**_NB I still need to loop through other values for the parameters to find the best ones, I'm actually quite confused as to why the nls function gives a best estimate that performs worse than the parameters you found_**\n\n*So I need to find a way of looping through the values, but its tricky witht the way its parametrized in lme\n\n### **_Summary Statistics_**\n\n```{r}\nddply(RAW, c(\"MonthNo\"), summarise,\n      N = length(Size),\n      mean = mean(Size),\n      max = max(Size),\n      min = min(Size),\n      sd= sd(Size),\n      se=sd/sqrt(N))\n```\n\n```{r}\n##Define parameters for best fit and confidence intervals\nBFP.fix <- BFP2[,1]\nupper <- BFP4[,2]\nlower <- BFP3[,3]\nfit.data <- data.frame(x=seq(0,max(RAW$Date, na.rm=TRUE),len=length(RAW$Date)), \n                       best=NA, upper=NA, lower=NA)\nfit.data$best <- em(fit.data$x, BFP.fix[1], BFP.fix[2], BFP.fix[3])\nfit.data$upper <- em(fit.data$x, upper[1], upper[2], upper[3])\nfit.data$lower <- em(fit.data$x, lower[1], lower[2], lower[3])\n\nggplot(fit.data, aes(y=best, x=x)) +\n       geom_line() + theme_classic() +\n       geom_ribbon(aes(ymin=lower, ymax=upper), fill='blue', alpha=0.2) +\n       geom_point(data=RAW, aes(x=Date,y=Size, color=ReefComplex)) +\n       xlab(\"Estimated Age (Days)\") +\n       ylab(\"Size(mm)\") +\n       ggtitle(\"CoTS Juvenile Growth Rate - Fixed Intercept\") +\n       scale_color_discrete(name=\"Reef Complex\")\n```\n\n\n```{r}\nlibrary(multcomp)\nlibrary(lsmeans)\n#paiwise comparison of\nMay <- lme(Size~ReefComplex, data=subset(RAW, MonthNo==5), random=~1|SiteName)\nJune <- lme(Size~ReefComplex, data=subset(RAW, MonthNo==6), random=~1|SiteName)\n#summary(lme(Size~ReefComplex, data=subset(RAW, MonthNo==7), random=~1|SiteName))#No obs\nAug <- lme(Size~ReefComplex, data=subset(RAW, MonthNo==8), random=~1|SiteName)\n#summary(lme(Size~ReefComplex, data=subset(RAW, MonthNo==9), random=~1|SiteName))#Only 1 site\nOct <- lme(Size~ReefComplex, data=subset(RAW, MonthNo==10), random=~1|SiteName)\nNov <- lme(Size~ReefComplex, data=subset(RAW, MonthNo==11), random=~1|SiteName)\n#summary(lme(Size~ReefComplex, data=subset(RAW, MonthNo==12), random=~1|SiteName))#only 1 site\nsummary(May);summary(June); summary(Aug); summary(Oct); summary(Nov)\nanova(May);anova(June); anova(Aug); anova(Oct); anova(Nov)\nsummary(June)\n\n#pairwise contrasts\nlsmeans(May, pairwise~ReefComplex, adjust=\"tukey\")\nlsmeans(June, pairwise~ReefComplex, adjust=\"tukey\")\nlsmeans(Aug, pairwise~ReefComplex, adjust=\"tukey\")\nlsmeans(Oct, pairwise~ReefComplex, adjust=\"tukey\")\nlsmeans(Nov, pairwise~ReefComplex, adjust=\"tukey\")\n```",
    "created" : 1475278481552.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2120550526",
    "id" : "C8484F4",
    "lastKnownWriteTime" : 1473316304,
    "path" : "C:/Users/jc312264/Dropbox/Wilmes et al 2016/CoTS_GrowthRate/CoTS_JuvGR.Rmd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "type" : "r_markdown"
}