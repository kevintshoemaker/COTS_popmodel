{
    "contents" : "##########################\n#  R script: generate key GIS layers for modeling COTS population in the GBR \n#\n#  Authors: Kevin Shoemaker, Sam Matthews, Camille Mellin, Damien Fordham\n#  \n#  08 April 2015 -- started scripting\n\n##########################\n\n\n###############################\n#  PREPARE KEY GIS LAYERS\n###############################\n\n################\n### create \"reefraster\" layer: represents percent of each grid cell with reef coverage. \n################\n\nsetwd(DATA_DIRECTORY)\nreefraster <- ReadRaster(\"reefraster001Bioregions.tif\",projection=projection,plot=F)   # uses \"ReadRaster\" utility function \nreefraster <- reclassify(reefraster,rcl=c(NA,NA,0, -Inf,0.5,0, 0.6,Inf,1))  # temporary layer: reclassify to binary\ncompute_percentReef <- function(t,na.rm=TRUE) sum(t,na.rm)  ## aggregation function\nreefpercent <- aggregate(reefraster, fact=10, fun=compute_percentReef, expand=TRUE, na.rm=TRUE) \nreefpercent <- reefpercent-1    # for some reason, the result ends up between 1 and 101- reformulate for proper percent\nplot(reefpercent)\nsetwd(SPATIALDATA_DIRECTORY)\n#writeRaster(reefpercent,filename=\"reefPercentRaster.asc\",format=\"ascii\",overwrite=T)   # write to file\n\n\n\n################\n### Create our Master Data Set - Conatins all environmetal data, Reef and Pixel ID, Coords and % Reef\n################\n\n#### NB ENV DATA WILL BE REINTERPOLATED TO FIT THE NEW XYZ GRID FROM GBRMPA BIOREGIONS SHAPEFILE\n\nsetwd(ENVDATA_DIRECTORY)    # first load the xyz data for each population of interest \nPopData <- read.table(\"ENV_dataGBR.txt\",header=T,sep=\"\\t\")\n\n#now we want to subset the popdata by the cells that contain reef\n\nreefpercent.df <- data.frame(data.frame(x = coordinates(reefpercent)[,1], y = coordinates(reefpercent)[,2], reefpercent = reefpercent@data@values))\nreefpercent.df <- subset(reefpercent.df, reefpercent>0)\ncoords <- reefpercent.df[,1:2]\nsp <- SpatialPoints(coords = coords, proj4string = CRS(projection))\n\nPopData <- merge(reefpercent.df, PopData, by=c('x', 'y'))\nPopData$PIXEL_ID <- 1:nrow(PopData)\nPopData <- PopData[,-4]\nPopData <- PopData[,c(38,1:37)]\nsetwd(DATA_DIRECTORY)\nwrite.table(PopData, \"PopData.txt\", sep=\"\\t\")\nNPOPS <- nrow(PopData)\n\nrm(reefpercent) # remove from memory (save space!)\nrm(reefraster)\n\n################\n### Create template raster for the GBR (proper extent and resolution)\n################\n\nminx <- min(PopData$x)-0.005  # farthest west\nminy <- min(PopData$y)-0.005  # farthest south\nmaxx <- max(PopData$x)+0.005  # farthest east\nmaxy <- max(PopData$y)+0.005  # farthest north\nstudyRegion <- extent(minx,maxx,miny,maxy)\ncat(sprintf(\"Western margin is %s degrees, southern margin is %s degrees, eastern margin is %s degrees, and northern margin is %s degrees\",minx,miny,maxx,maxy))\n\nplot(studyRegion, main=\"Study Region (blank)\")\n\n# save study region extent (as \"extent\" object)\nsetwd(SPATIALDATA_DIRECTORY)\nsave(studyRegion,file=\"studyRegion.RData\")\n\n\ntemplate <- raster(ext=studyRegion,resolution=0.01,vals=0, crs=projection)   # create empty raster\n#plot(template)\nsetwd(SPATIALDATA_DIRECTORY)\nwriteRaster(template,filename=\"templateRaster.asc\",format=\"ascii\",overwrite=T)   # write to file\ntotalCells <- length(template@data@values)    # 1,335,372 cells\ncat(sprintf(\"total cells in study region raster is %s\",totalCells))\n\n\n################\n### Create Reef ID layer for the GBR\n################\n\n## rasterize an XYS variable.\nreefID <- as.numeric(PopData$REEF_ID)\nndx <- !is.na(reefID)\nreefIDraster <- rasterize(PopData[,c('x','y')][ndx,], template, field=reefID[ndx])   # memory limitations\n\nsetwd(SPATIALDATA_DIRECTORY)\nwriteRaster(reefIDraster,filename=\"reefIDRaster.asc\",format=\"ascii\",overwrite=T)   # write to file\nplot(reefIDraster)\n\nrm(reefIDraster)",
    "created" : 1474994714909.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "653986649",
    "id" : "CE9ADB8",
    "lastKnownWriteTime" : 1475263542,
    "path" : "~/GitHub/COTS_popmodel/COTSModel_PrepareGISlayers.R",
    "project_path" : "COTSModel_PrepareGISlayers.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}