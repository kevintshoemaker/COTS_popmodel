{
    "contents" : "##########################\n#  R script: generate key GIS layers for modeling COTS population in the GBR \n#\n#  Authors: Kevin Shoemaker, Sam Matthews, Camille Mellin, Damien Fordham\n#  \n#  08 April 2015 -- started scripting\n#\n#  26 September 2016 -- redefined GIS layers to comply with GBRMPA MArineBioregions_WGS84 Shapefile\n#\n#         URGENT: NEED TO OBTAIN ENTIRE NERP DATASET AND EXTRACT BASED ON NEW DEFINITIONS\n\n##########################\n\n\n###############################\n#  PREPARE KEY GIS LAYERS\n###############################\n\n################\n### create \"reefraster\" layer: represents percent of each grid cell with reef coverage. \n\n### UPDATE 28 September 2009 -- Convert to using the MarineBioregions_WGS84 Shapefile as Basis\n################\n\n### Create template raster for the GBR (proper extent and resolution)\n################\n\nsetwd(ENVDATA_DIRECTORY)    # first load the xyz data for each population of interest \nEnvData <- read.table(\"ENV_dataGBR.txt\",header=T,sep=\"\\t\")\nNPOPS <- nrow(EnvData)\n# generate a template grid\nhead(EnvData)\n\n\nminx <- min(EnvData$x)-0.005  # farthest west\nminy <- min(EnvData$y)-0.005  # farthest south\nmaxx <- max(EnvData$x)+0.005  # farthest east\nmaxy <- max(EnvData$y)+0.005  # farthest north\nstudyRegion <- extent(minx,maxx,miny,maxy)\ncat(sprintf(\"Western margin is %s degrees, southern margin is %s degrees, eastern margin is %s degrees, and northern margin is %s degrees\",minx,miny,maxx,maxy))\n\nplot(studyRegion, main=\"Study Region (blank)\")\n\n# save study region extent (as \"extent\" object)\nsetwd(SPATIALDATA_DIRECTORY)\nsave(studyRegion,file=\"studyRegion.RData\")\n\n\ntemplate <- raster(ext=studyRegion,resolution=0.01,vals=0)   # create empty raster\ntemplate001 <- raster(ext=studyRegion,resolution=0.001,vals=0)   # create empty raster at 0.001 res\n#plot(template)\nsetwd(SPATIALDATA_DIRECTORY)\nwriteRaster(template,filename=\"templateRaster.asc\",format=\"ascii\",overwrite=T)   # write to file\n\n##################\n## create reefraster from GBRMPA Classification at 0.001 resolution\n##################\nreefshape <- readShapefile(\"MarineBioregions_WGS84\", projection = projection, plot=T)\ncrs(reefshape) <- crs(projection)\nreefraster001 <- rasterize(reefshape, template001, field = NA)\nsetwd(SPATIALDATA_DIRECTORY)\nwriteRaster(reefraster,filename=\"reefraster001.asc\",format=\"ascii\",overwrite=T)   # write to file\n\nsummary(reefshape)\n##################\n## Create ReefPercent Raster (aggregate reefraster to 0.01 resolution to calculate percent reef in each 0.01 cell)\n##################\n\nreefraster01 <- reclassify(reefraster,rcl=c(NA,NA,0, -Inf,0.5,0, 0.501,Inf,1))  # temporary layer: reclassify to binary\ncompute_percentReef <- function(t,na.rm=TRUE) sum(t,na.rm)  ## aggregation function\nreefpercent <- aggregate(reefraster, fact=10, fun=compute_percentReef, expand=TRUE, na.rm=TRUE) \nreefpercent <- reefpercent-1    # for some reason, the result ends up between 1 and 101- reformulate for proper percent\nplot(reefpercent)\nsetwd(SPATIALDATA_DIRECTORY)\nwriteRaster(reefpercent,filename=\"reefPercentRaster.asc\",format=\"ascii\",overwrite=T)   # write to file\nrm(reefpercent)\n\n\n##################\n## Create ReefBioregion ReefID raster files  \n##################\n\nreefbioregion <- rasterize(reefshape, template, field = \"BIOREGION\")\nwriteRaster(reefbioregion,filename=\"reefbioregion.asc\",format=\"ascii\",overwrite=T)\n\nreefID <- rasterize(reefshape, template, field = \"OBJECTID\")\nwriteRaster(reefID,filename=\"reefID.asc\",format=\"ascii\",overwrite=T)\n\n##################\n## create a XYZ grid from reefshape keeping all fields\n##################\nreefpercent.df <- data.frame(data.frame(x = coordinates(reefpercent)[,1], y = coordinates(reefpercent)[,2], reefpercent = reefpercent@data@values))\nreefpercent.df <- subset(reefpercent.df, reefpercent>0)\ncoords <- reefpercent.df[,1:2]\nsp <- SpatialPoints(coords = coords, proj4string = CRS(projection))\n\n#extract vals from shapefile for every pixel that contains reef\nvals <- over(sp, reefshape)\nreefs <- cbind(coordinates(sp), vals, reefpercent = reefpercent.df[,3])\n\n#create subset of pixels that contain reef but aren't assigned attributes\nreef.NA <- subset(reefs, is.na(REEF_ID))\n#creat subset that do have attributes\nreef.YES <- subset(reefs, !is.na(REEF_ID))\n#convert both the spatial points dataframes to determine the geographic distance between them\ncoordinates(reef.NA) <- ~x+y; coordinates(reef.YES) <- ~x+y\nGdist <- gDistance(reef.NA,reef.YES, byid = T)\n#min.d <- apply(Gdist, 2, which.min) #creates vector of the minimum distances which we use to index the cords \n#min.gd <- apply(Gdist, 2, min)\n\n\n\n##################\n#Check how all shapefiles, rasters and environmental data line up\n##################\nenvcoords <- EnvData[,2:3]\nenvpoints <- SpatialPoints(coords = envcoords, proj4string = CRS(projection))\n\nplot(reefpercent, xlim=c(150.2,150.5), ylim=c(-22.4,-22.2))\n#plot(reefraster001, xlim=c(150.2,150.5), ylim=c(-22.4,-22.2), add = TRUE)\nplot(reefshape, xlim=c(150.2,150.5), ylim=c(-22.4,-22.2), add = TRUE)\npoints(sp, xlim=c(150.2,150.5), ylim=c(-22.4,-22.2), pch=20, col=\"blue\", cex=0.5)\npoints(envpoints, xlim=c(150.2,150.5), ylim=c(-22.4,-22.2), pch=17, col=\"red\", cex=0.5)\n\n# Points lie directly in the centre of the grid cell\n# WE ARE MISSING HUGE CHUNKS OF DATA, AND SOME DATA IS ON THE LAND\n\n#merge env data with reef data\n\ndata <- dplyr::inner_join(reefs, EnvData, by = c(\"x\", \"y\"))\n\n\n# there is a severe mismatch between environmental data and reef percent we should 25026 cases \n\n\n#our reef ID is not based off the environmental variables and needs to be the XYZ grid from camille\n\n\n\ntotalCells <- length(template@data@values)    # 1,335,372 cells\ncat(sprintf(\"total cells in study region raster is %s\",totalCells))\n\n\n################\n### Create Reef ID layer for the GBR\n################\n\n## rasterize an XYS variable.\nreefID <- as.numeric(PopData$REEF_ID)\nndx <- !is.na(reefID)\nreefIDraster <- rasterize(PopData[,c('x','y')][ndx,], template, field=reefID[ndx])   # memory limitations\n\nsetwd(SPATIALDATA_DIRECTORY)\nwriteRaster(reefIDraster,filename=\"reefIDRaster.asc\",format=\"ascii\",overwrite=T)   # write to file\nplot(reefIDraster)\n\nrm(reefIDraster)\n",
    "created" : 1474994714909.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3231748120",
    "id" : "CE9ADB8",
    "lastKnownWriteTime" : 1475025752,
    "path" : "~/GitHub/COTS_popmodel/COTSModel_PrepareGISlayers.R",
    "project_path" : "COTSModel_PrepareGISlayers.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}